[1mdiff --git a/Modules/Workflows/Entities/Workflow.php b/Modules/Workflows/Entities/Workflow.php[m
[1mindex c9d75aaf..27c34cb1 100644[m
[1m--- a/Modules/Workflows/Entities/Workflow.php[m
[1m+++ b/Modules/Workflows/Entities/Workflow.php[m
[36m@@ -443,6 +443,18 @@[m [mclass Workflow extends Model[m
                     ],[m
                 ][m
             ],[m
[32m+[m[32m            'workflow' => [[m
[32m+[m[32m                'title' => __('Workflow'),[m
[32m+[m[32m                'items' => [[m
[32m+[m[32m                    'workflow_triggered' => [[m
[32m+[m[32m                        'title' => __('Workflow triggered'),[m
[32m+[m[32m                        'values' => self::where('active', 1)->pluck('name', 'id')->toArray(),[m
[32m+[m[32m                        'triggers' => [[m
[32m+[m[32m                            'workflow.all'[m
[32m+[m[32m                        ][m
[32m+[m[32m                    ],[m
[32m+[m[32m                ][m
[32m+[m[32m            ],[m
         ];[m
 [m
         self::$conditions_config[$mailbox_id] = \Eventy::filter('workflows.conditions_config', self::$conditions_config[$mailbox_id], $mailbox_id);[m
[36m@@ -511,6 +523,15 @@[m [mclass Workflow extends Model[m
                     ],[m
                 ],[m
             ],[m
[32m+[m[32m            'workflow' => [[m
[32m+[m[32m                'title' => __('Workflow'),[m
[32m+[m[32m                'items' => [[m
[32m+[m[32m                    'run_workflow' => [[m
[32m+[m[32m                        'title' => __('Run Workflow'),[m
[32m+[m[32m                        'values' => self::where('active', 1)->pluck('name', 'id')->toArray()[m
[32m+[m[32m                    ][m
[32m+[m[32m                ][m
[32m+[m[32m            ][m
         ];[m
 [m
         self::$actions_config[$mailbox_id] = \Eventy::filter('workflows.actions_config', self::$actions_config[$mailbox_id], $mailbox_id);[m
[36m@@ -564,7 +585,8 @@[m [mclass Workflow extends Model[m
         foreach ($conditions as $list_i => $list) {[m
             foreach ($list as $condition_i => $condition) {[m
                 $config = self::getConditionConfig($condition['type'], $mailbox_id);[m
[31m-                if (empty($condition['type']) || (empty($condition['operator']) && $condition['type'] != 'customer_phone_number')[m
[32m+[m[32m                if (empty($condition['type'])[m
[32m+[m[32m                    || (empty($condition['operator']) && !in_array($condition['type'], ['customer_phone_number', 'workflow_triggered']))[m
                     || (!isset($condition['value']) [m
                             && $config [m
                             && $condition['type'] != 'office_hours'[m
[36m@@ -592,6 +614,7 @@[m [mclass Workflow extends Model[m
                 $row++;[m
             }[m
         }[m
[32m+[m
         return $result;[m
     }[m
 [m
[36m@@ -707,6 +730,7 @@[m [mclass Workflow extends Model[m
         }[m
 [m
         foreach ($workflows as $workflow) {[m
[32m+[m
             if (!in_array($workflow->id, $processed_ids)[m
                 || ($workflow->max_executions > 1[m
                     && $conv_workflows->firstWhere('workflow_id', $workflow->id)->counter < $workflow->max_executions[m
[36m@@ -717,6 +741,9 @@[m [mclass Workflow extends Model[m
                 }[m
             }[m
         }[m
[32m+[m
[32m+[m[32m        //[m
[32m+[m
         if ($clean_last_thread) {[m
             self::$cond_last_thread[$conversation->id] = [];[m
         }[m
[36m@@ -783,6 +810,11 @@[m [mclass Workflow extends Model[m
                     //     break 2;[m
                     // }[m
 [m
[32m+[m[32m                    if ($row['type'] == 'workflow_triggered') {[m
[32m+[m[32m                        $valid_trigger = true;[m
[32m+[m[32m                        break 2;[m
[32m+[m[32m                    }[m
[32m+[m
                     if (in_array($action, $config['triggers'])) {[m
                         $valid_trigger = true;[m
                         break 2;[m
[36m@@ -1229,6 +1261,15 @@[m [mclass Workflow extends Model[m
                             $or_true = !self::isTimeWithinRange($convDayOfWeek, $convTime, $schedule);[m
                         }[m
                         break;[m
[32m+[m
[32m+[m[32m                    case 'workflow_triggered':[m
[32m+[m[32m                        $WSW = self::getWSW();[m
[32m+[m[32m                        if (in_array($this->id, array_keys($WSW)) && $action != 'workflow.workflow_triggered') {[m
[32m+[m[32m                            continue 2;[m
[32m+[m[32m                        }[m
[32m+[m
[32m+[m[32m                        $or_true = true;[m
[32m+[m[32m                        break;[m
                     [m
                     default:[m
                         $or_true = \Eventy::filter('workflow.check_condition', false, $row['type'], $operator, $value, $conversation, $this);[m
[36m@@ -1282,6 +1323,7 @@[m [mclass Workflow extends Model[m
 [m
     public function performActions($conversation/*, $mark_processed = true*/)[m
     {[m
[32m+[m[32m        $runWorkflows = [];[m
         $executed = false;[m
         foreach ($this->actions as $ands) {[m
             foreach ($ands as $action) {[m
[36m@@ -1481,6 +1523,12 @@[m [mclass Workflow extends Model[m
                         return;[m
                         break;[m
 [m
[32m+[m[32m                    case 'run_workflow':[m
[32m+[m[32m                        if ($value) {[m
[32m+[m[32m                            $runWorkflows[] = $value;[m
[32m+[m[32m                        }[m
[32m+[m[32m                        break;[m
[32m+[m
                     default:[m
                         \Eventy::filter('workflow.perform_action', $performed = false, $action['type'], $operator, $value, $conversation, $this);[m
                         break;[m
[36m@@ -1502,6 +1550,7 @@[m [mclass Workflow extends Model[m
                 $created_by_user_id = $auth_user->id;[m
             }[m
         }[m
[32m+[m
         Thread::create($conversation, Thread::TYPE_LINEITEM, '', [[m
             'user_id'       => $conversation->user_id,[m
             'created_by_user_id' => $created_by_user_id,[m
[36m@@ -1513,6 +1562,34 @@[m [mclass Workflow extends Model[m
             ][m
         ]);[m
 [m
[32m+[m[32m        if (!empty($runWorkflows)) {[m
[32m+[m[32m            foreach ($runWorkflows as $workflowId) {[m
[32m+[m[32m                $actionWorkflow = self::where([[m
[32m+[m[32m                        'id' => $workflowId,[m
[32m+[m[32m                        'active' => true[m
[32m+[m[32m                    ])[m
[32m+[m[32m                    ->firstOrFail();[m
[32m+[m
[32m+[m[32m                if (!empty($actionWorkflow)) {[m
[32m+[m[32m                    $actionWorkflow->performActions($conversation);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // get Workflows that Start other Workflows - WSW[m
[32m+[m[32m        $WSW = self::getWSW();[m
[32m+[m[32m        if (self::in_array_recursive($this->id, $WSW)) { // Trigger an action if the desired workflow is running[m
[32m+[m[32m            $WSWID = self::array_search_recursive((string)$this->id, $WSW); // Достаю ID Workflow, которое нужно запустить[m
[32m+[m[32m            $thisWorkflow = Workflow::where([[m
[32m+[m[32m                    'id' => $WSWID,[m
[32m+[m[32m                    'active' => true[m
[32m+[m[32m                ])[m
[32m+[m[32m                ->firstOrFail();[m
[32m+[m[32m            if (!empty($thisWorkflow) && $thisWorkflow->checkConditions($conversation, 'workflow.workflow_triggered')) {[m
[32m+[m[32m                $thisWorkflow->performActions($conversation);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
         //if ($mark_processed) {[m
         if ($this->isAutomatic()) {[m
             $this->markProcessed($conversation->id);[m
[36m@@ -1792,7 +1869,7 @@[m [mclass Workflow extends Model[m
         foreach ($this->conditions as $and_i => $ands) {[m
             foreach ($ands as $or_i => $condition) {[m
                 $has_error = false;[m
[31m-                if (empty($condition['type']) || (empty($condition['operator']) && $condition['type'] != 'customer_phone_number')) {[m
[32m+[m[32m                if (empty($condition['type']) || (empty($condition['operator']) && !in_array($condition['type'], ['customer_phone_number', 'workflow_triggered']))) {[m
                     $has_error = true;[m
                 }[m
                 if (!$has_error) {[m
[36m@@ -2003,4 +2080,76 @@[m [mclass Workflow extends Model[m
         // Проверка, находится ли текущее время в интервале[m
         return ($currentTime >= $fromTime && $currentTime <= $toTime);[m
     }[m
[32m+[m
[32m+[m[32m    public static function getWSW()[m
[32m+[m[32m    {[m
[32m+[m[32m        $result = Workflow::select('id', \DB::raw("JSON_ARRAYAGG(JSON_UNQUOTE(JSON_EXTRACT(element, '$.value'))) as cond"))[m
[32m+[m[32m            ->where('active', 1)[m
[32m+[m[32m            ->whereRaw("[m
[32m+[m[32m                JSON_CONTAINS([m
[32m+[m[32m                    JSON_EXTRACT(conditions, '$[*][*]'),[m
[32m+[m[32m                    JSON_OBJECT('type', 'workflow_triggered')[m
[32m+[m[32m                )[m
[32m+[m[32m            ")[m
[32m+[m[32m            ->crossJoin(\DB::raw("[m
[32m+[m[32m                JSON_TABLE([m
[32m+[m[32m                    JSON_EXTRACT(conditions, '$[*][*]'),[m
[32m+[m[32m                    '$[*]' COLUMNS ([m
[32m+[m[32m                        element JSON PATH '$'[m
[32m+[m[32m                    )[m
[32m+[m[32m                ) as jt[m
[32m+[m[32m            "))[m
[32m+[m[32m            ->whereRaw("[m
[32m+[m[32m                JSON_EXTRACT(element, '$.type') = 'workflow_triggered'[m
[32m+[m[32m            ")[m
[32m+[m[32m            ->groupBy('id')[m
[32m+[m[32m            ->get()[m
[32m+[m[32m            ->pluck('cond', 'id')[m
[32m+[m[32m            ->map(function($item) {[m
[32m+[m[32m                return json_decode($item, true); // Декодируем JSON в массив[m
[32m+[m[32m            })[m
[32m+[m[32m            ->toArray();[m
[32m+[m
[32m+[m[32m        // Remove extra quotes[m
[32m+[m[32m//        if (!empty($result)) {[m
[32m+[m[32m//            $result = array_map(function($value) {[m
[32m+[m[32m//                return trim($value, '"');[m
[32m+[m[32m//            }, $result);[m
[32m+[m[32m//        }[m
[32m+[m
[32m+[m[32m        return $result;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static function in_array_recursive($needle, $haystack, $strict = false) {[m
[32m+[m[32m        foreach ($haystack as $item) {[m
[32m+[m[32m            if (is_array($item)) {[m
[32m+[m[32m                if (self::in_array_recursive($needle, $item, $strict)) {[m
[32m+[m[32m                    return true;[m
[32m+[m[32m                }[m
[32m+[m[32m            } elseif (($strict ? $item === $needle : $item == $needle)) {[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static function array_search_recursive($needle, $haystack, $strict = false) {[m
[32m+[m[32m        foreach ($haystack as $key => $value) {[m
[32m+[m[32m            if (is_array($value)) {[m
[32m+[m[32m                $result = self::array_search_recursive($needle, $value, $strict);[m
[32m+[m[32m                if ($result !== false) {[m
[32m+[m[32m                    return $key; // возвращаем ключ верхнего уровня, где найдено совпадение[m
[32m+[m[32m                }[m
[32m+[m[32m            } elseif (($strict ? $value === $needle : $value == $needle)) {[m
[32m+[m[32m                return $key; // возвращаем ключ текущего уровня[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static function workflowStartWor()[m
[32m+[m[32m    {[m
[32m+[m
[32m+[m[32m    }[m
 }[m
\ No newline at end of file[m
